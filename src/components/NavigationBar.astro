---
import Logo from "../svgs/Logo.astro";
import IconClose from "../svgs/icons/IconClose.astro";
import IconHamburger from "../svgs/icons/IconHamburger.astro";

interface Props {
  variant: "transparent" | "beige";
}

const { variant } = Astro.props;

let navBarVariantBgColor = "";
let navBarVariantIconColor = "";

if (variant === "transparent") {
  navBarVariantBgColor = "bg-white/20 backdrop-blur";
  navBarVariantIconColor = "text-white";
} else if (variant === "beige") {
  navBarVariantBgColor = "bg-beige-300";
  navBarVariantIconColor = "text-brown-600";
} else {
  throw new Error(`Unexpected variant ${variant}`);
}

// TODO: define navigation links here
// TODO: (important) fix nav-bar color switching on other pages :S
---

<!-- TODO: move this header outside the navigation bar -->
<header class="primary-nav-wrapper fixed left-0 top-0 z-10 w-full">
  <div
    class={`flex items-center justify-between px-5 md:px-14 py-5 ${navBarVariantBgColor}`}
  >
    <a href="/" class="z-10">
      <Logo
        class={`primary-nav__logo-icon h-6 w-auto md:h-8 ${navBarVariantIconColor}`}
      />
      <span class="sr-only">In-Trend</span>
    </a>

    <!-- TODO: menu absolute or fixed? -->
    <!-- TODO: implement menu for both desktop and mobile -->
    <nav
      data-variant={variant}
      class="primary-nav fixed inset-x-0 top-0 z-0 hidden h-screen bg-beige-300 lg:static lg:inset-auto lg:z-auto lg:block lg:h-auto lg:bg-transparent"
    >
      <div
        class="grid h-full place-content-center justify-items-center gap-40 lg:block lg:h-auto"
      >
        <div class="grid gap-4 pt-24 lg:flex lg:gap-12 lg:pt-0">
          <a
            href="/who-we-are"
            class={`inline-block text-center text-xl font-bold uppercase text-brown-600 lg:text-sm lg:${navBarVariantIconColor}`}
          >
            Meet the team
          </a>
          <a
            href="/our-services"
            class={`inline-block text-center text-xl font-bold uppercase text-brown-600 lg:text-sm lg:${navBarVariantIconColor}`}
          >
            Our services
          </a>
          <a
            href="/contact-us"
            class={`inline-block text-center text-xl font-bold uppercase text-brown-600 lg:text-sm lg:${navBarVariantIconColor}`}
          >
            Contact us
          </a>
        </div>
        <button class="primary-nav__close-button lg:hidden">
          <IconClose class="h-12 w-12 text-brown-600" />
        </button>
      </div>
    </nav>

    <button class="primary-nav__toggle-button z-10 lg:hidden">
      <!-- TODO: add aria-expanded stuff -->
      <IconHamburger
        class={`primary-nav__toggle-button-icon h-6 w-auto md:h-8 ${navBarVariantIconColor}`}
      />
      <span class="sr-only">Toggle Menu</span>
    </button>
  </div>
</header>

<style is:global>
  .force-dark-navbar {
    background-color: rgb(245 245 235 / 1) !important;
  }

  .force-dark-navbar div {
    background-color: transparent !important;
    backdrop-filter: none !important;
    -webkit-backdrop-filter: none !important;
  }

  .force-dark-navbar a,
  .force-dark-navbar svg {
    color: #333333 !important;
  }
</style>

<script>
  // TODO: move this stuff into a /shared folder
  function querySelectorOrError(query: string) {
    const element = document.querySelector(`${query}`);

    if (element !== null) {
      return element;
    }

    throw new Error(`ERROR: no elements matched query ${query}`);
  }

  const primaryNav = {
    logoIcon: querySelectorOrError(".primary-nav__logo-icon"),
    toggleButton: querySelectorOrError(".primary-nav__toggle-button"),
    toggleButtonIcon: querySelectorOrError(".primary-nav__toggle-button-icon"),
    closeButton: querySelectorOrError(".primary-nav__close-button"),
    nav: querySelectorOrError(".primary-nav"),
  };

  let isNavOpen = false;

  const openPrimaryNav = () => {
    primaryNav.nav.classList.toggle("hidden");

    const variant = primaryNav.nav.getAttribute("data-variant")!;
    if (variant === "transparent") {
      primaryNav.logoIcon.classList.remove("text-white");
      primaryNav.logoIcon.classList.add("text-brown-600");

      primaryNav.toggleButtonIcon.classList.remove("text-white");
      primaryNav.toggleButtonIcon.classList.add("text-brown-600");
    }
    isNavOpen = true;
  };

  const closePrimaryNav = () => {
    primaryNav.nav.classList.toggle("hidden");

    const variant = primaryNav.nav.getAttribute("data-variant")!;
    if (variant === "transparent") {
      primaryNav.logoIcon.classList.remove("text-brown-600");
      primaryNav.logoIcon.classList.add("text-white");

      primaryNav.toggleButtonIcon.classList.remove("text-brown-600");
      primaryNav.toggleButtonIcon.classList.add("text-white");
    }
    isNavOpen = false;
  };

  /*
    Close navigation bar when we resize window
    Reference: https://css-tricks.com/working-with-javascript-media-queries/
  */

  const mediaQuery = window.matchMedia("(min-width: 1024px)");
  mediaQuery.addEventListener("change", (e) => {
    if (e.matches && isNavOpen) {
      closePrimaryNav();
    }
  });

  primaryNav.toggleButton.addEventListener("click", () => {
    if (!isNavOpen) {
      openPrimaryNav();
    } else {
      closePrimaryNav();
    }
  });

  primaryNav.closeButton.addEventListener("click", () => {
    if (isNavOpen) {
      closePrimaryNav();
    }
  });
</script>
